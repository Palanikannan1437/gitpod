// Copyright (c) 2022 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

syntax = "proto3";

package ide_service_api;

option go_package = "github.com/gitpod-io/gitpod/ide-service/api";
option java_package = "io.gitpod.ideservice.api";

service IDEService {
    rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {}
    rpc ResolveWorkspaceConfig(ResolveWorkspaceConfigRequest) returns (ResolveWorkspaceConfigResponse) {}
}

message GetConfigRequest {}

message GetConfigResponse {
    string content = 1;
}

// TODO: import type from other packages
// EnvironmentVariable describes an env var as key/value pair
message EnvironmentVariable {
    string name = 1;
    string value = 2;
}

// TODO: import type from other packages
// WorkspaceType specifies the purpose/use of a workspace. Different workspace types are handled differently by all parts of the system.
// copied from https://github.com/gitpod-io/gitpod/blob/a7f35378326ca5ec41aab1a48418949070a9b37a/components/ws-manager-api/core.proto#L660-L675
enum WorkspaceType {
    REGULAR = 0;

    PREBUILD = 1;

    IMAGEBUILD = 4;
}


message ResolveWorkspaceConfigRequest {
    WorkspaceType type = 1;
    string context = 2;
    string ide_settings = 3;
    string workspace_config = 4;
}

message ResolveWorkspaceConfigResponse {
    repeated EnvironmentVariable envvars = 1;
    string supervisor_image = 2;
    string web_image= 3;
    repeated string ide_image_layers = 4;
    // control whether to configure default IDE for a user
    string referer_ide = 5;
}
